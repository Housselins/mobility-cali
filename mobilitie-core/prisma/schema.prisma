// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int            @id @default(autoincrement())
  email    String         @unique
  password String
  name     String?
  rol      Rol?           @relation(fields: [rolId], references: [id])
  rolId    Int?
  logins   LoginHistory[] // Relaci√≥n con LoginHistory
}

model Rol {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?

  User User[]
}

model New {
  id                Int      @id @default(autoincrement())
  title             String
  contenido_noticia String
  image             String?
  isEnabled         Boolean  @default(true)
  createdAt         DateTime @default(now())
  updateddAt        DateTime @default(now())
}

model LoginHistory {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  loginTime DateTime @default(now())
}

model Banner {
  id        Int      @id @default(autoincrement())
  image     String
  alt       String
<<<<<<< HEAD
  createdAt  DateTime @default(now())
}

model info {
  id         Int      @id @default(autoincrement())
  title      String
  contenido_info String
  image      String
  isEnabled  Boolean  @default(true)
  createdAt  DateTime @default(now())
  updateddAt DateTime @default(now())
}
=======
  createdAt DateTime @default(now())
}

model SocialMedia {
  id               Int                @id @default(autoincrement())
  name             String
  url              String
  image            String?
  isEnabled        Boolean            @default(true)
  createdAt        DateTime           @default(now())
  updateddAt       DateTime           @default(now())
  SocialMediaAudit SocialMediaAudit[]
}

model SocialMediaAudit {
  id            Int         @id @default(autoincrement())
  socialMedia   SocialMedia @relation(fields: [socialMediaId], references: [id])
  socialMediaId Int
  name          String
  url           String
  image         String
  isEnabled     String
  createdAt     DateTime    @default(now())
  updateddAt    DateTime    @default(now())
}
>>>>>>> origin/social-managment
